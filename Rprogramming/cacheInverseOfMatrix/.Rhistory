ozNA<-oz[]!="NA"
ozNA
sum(ozNA[]!="NA")
sum(ozNA[]>"NA")
sum(ozNA[]="TRUE"")
sum(ozNA[]=="TRUE"")
1
;
oz
oz>NA
oz!=NA
oz[]!=NA
oz[]!="NA"
oz[]>"NA"
oz[]!="NA"
help(sum)
sum(oz, na.rm=TRUE)
ozNA<-oz[]!="NA"
ozNA
sum(ozNA, na.rm=TRUE)
153-116
oz
help(mean)
mean(oz, na.rm=TRUE)
sub<-x[x[,1]>31,x[,4]>90]
help(subset)
subset(x, Ozone>31, select=c(Ozone, Solar.R, Temp))
subset(x, Ozone>31&&Temp>90, select=c(Ozone, Solar.R, Temp))
subset(x, Ozone>31&Temp>90, select=c(Ozone, Solar.R, Temp))
mean(select[,2])
sub<-subset(x, Ozone>31&Temp>90, select=c(Ozone, Solar.R, Temp))
sub
mean(sub[,2])
sub2<-subset(x,Month=6, select=c(Temp, Month))
sub2
sub2<-subset(x,Month==6, select=c(Temp, Month))
sub2
mean(sub2[,2])
mean(sub2[,1])
sub2<-subset(x,Month==5, select=c(Ozone, Month))
sub2
help(max)
max(sub2[,1], na.rm=TRUE)
help(rm)
ls()
rm(ls())
ls()
con<-url("http://www.jhsph.edu", "r")
x<readLines(con)
x<-readLines(con)
head(x)
help(lapply)
con <-url("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
a <-available.packages()
head(rownames(a), 2)
clear
install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
search()
ls
pwd
where
DT <-fread('pid.csv')
fread
fraed()
fread()
library(data.table)
DT<-fread('pid.csv')
head(DT)
mean(DT$pwgtp15,by=DT$SEX)
system.time()
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
x<rowMeans(DT)[DT$SEX==1]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)
)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
x<-read.csv("hw1_data.csv")
x[1:2,]
attributes(x)
x[152:153,]
x[47,]
ozNA<-oz[1:153]!="NA"
oz <- x[,1]
ozNA<-oz[1:153]!="NA"
sum(ozNA)
ozNA<-oz[oz[]!="NA"]
ozNA
ozNA<-oz[]!="NA"
ozNA
sum(ozNA[]=="TRUE")
sum(ozNA, na.rm=TRUE)
153-116
mean(oz, na.rm=TRUE)
sub<-x[x[,1]>31,x[,4]>90]
subset(x, Ozone>31&Temp>90, select=c(Ozone, Solar.R, Temp))
mean(select[,2])
sub<-subset(x, Ozone>31&Temp>90, select=c(Ozone, Solar.R, Temp))
sub
mean(sub[,2])
sub2<-subset(x,Month==6, select=c(Temp, Month))
sub2
mean(sub2[,1])
sub2<-subset(x,Month==5, select=c(Ozone, Month))
sub2
max(sub2[,1], na.rm=TRUE)
library(swirl)
ls()
rm (list=ls())
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4)+c(0, 10, 100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
num_vect<-c(0.5, 55, -10, 6)
tf<-num_vect<1
tf
x<-num_vect>=6
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Dong Ping Zhang")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep= " ")
paste(1:3,c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
my_data<-sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0\0
0/0
Inf-Inf
x
x[1:10]
x[is.na[x]]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y<0]
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vec<-c(foo=11, bar=2, norf=NA)
vect<-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector=1:20
my_vector=c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data)<-cnames
my_data
install.packages("swirl")
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
getwd()
ls()
x<-9
ls()
list.files()
dir()
?list.files
args(list.files())
args(list.files
)
old.dir<-getwd()
?dir.create
dir.create("testdir")
setwd(testdir)
setwd("testdir"")
)
)
""
setwd("testdir")
getwd()
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir", recurvise=TRUE)
unlink("testdir")
getwd()
unlink("testdir", recursive=TRUE)
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE, FALSE, FALSE)
TRUE&&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE, FALSE, FALSE)
TRUE||c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('tiwns','twins')
identical('twins','twins')
xor(5==6,!FALSE)
ints < sample(10)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
reminader(divisor=11,num=5)
remainder(divisor=11,num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(std, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(x[1],x<-c(8,4,0))
evaluate(x,x<-c(8,4,0))
evaluate(function(x){x[1]},x<-c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)-1]}, c(8,4,0))
evaluate(function(x){x[length(x)}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
submit()
telegram("DongPing")
submit()
mad_libs("here","hot","me")
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
unique_vals2<-sapply(flags, unique)
sapply(flags, unique)
lappy(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$ACTIVE_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom()
?rbinom
rbinom(1, size=100, prob=0.7)
flips2<-rbinom(1:100, size=1,prob=0.7)
flips2<-rbinom(100, size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(mean=100, sd=25)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t1)
class(t2)
t2
t1
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cars
head(data)
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance", main="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(mtcars$mpg)
x = rbind(c(1, -1/4), c(-1/4, 1))
x
m=makeCacheMatrix
getwd
getwd()
setwd("/Users/dongping/Code/datascience/Rprogramming/cacheInverseOfMatrix")
getwd()
m=makeCacheMatrix
m=makeCacheMatrix(x)
m=makeCacheMatrix(x)
getwd()
m=makeCacheMatrix(x)
m=makeCacheMatrix(x)
getwd()
m=makeCacheMatrix(x)
source("makeCacheMatrix.R")
m=makeCacheMatrix(x)
m
x
m$get()
cacheSolve(m)
source("cacheSolve")
source("cacheSolve.R")
cacheSolve(m)
cacheSolve(m)
source("cacheInverseOfMatrix.R")
m=makeCacheMatrix(x)
m
m$get()
m$getInverse()
cacheSolve(m)
m$getInverse()
cacheSolve(m)
x = rbind(c(1, -1/4, 1), c(-1/4, 1, -1), c(-1, 1, 1/4))
m=makeCacheMatrix(x)
m$get()
solveCache(m)
cacheSolve(m)
cacheSolve(m)
