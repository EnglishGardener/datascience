y[y<0]
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vec<-c(foo=11, bar=2, norf=NA)
vect<-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector=1:20
my_vector=c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data)<-cnames
my_data
install.packages("swirl")
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
getwd()
ls()
x<-9
ls()
list.files()
dir()
?list.files
args(list.files())
args(list.files
)
old.dir<-getwd()
?dir.create
dir.create("testdir")
setwd(testdir)
setwd("testdir"")
)
)
""
setwd("testdir")
getwd()
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir", recurvise=TRUE)
unlink("testdir")
getwd()
unlink("testdir", recursive=TRUE)
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE, FALSE, FALSE)
TRUE&&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE, FALSE, FALSE)
TRUE||c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('tiwns','twins')
identical('twins','twins')
xor(5==6,!FALSE)
ints < sample(10)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
reminader(divisor=11,num=5)
remainder(divisor=11,num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(std, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(x[1],x<-c(8,4,0))
evaluate(x,x<-c(8,4,0))
evaluate(function(x){x[1]},x<-c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)-1]}, c(8,4,0))
evaluate(function(x){x[length(x)}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
submit()
telegram("DongPing")
submit()
mad_libs("here","hot","me")
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
unique_vals2<-sapply(flags, unique)
sapply(flags, unique)
lappy(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$ACTIVE_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom()
?rbinom
rbinom(1, size=100, prob=0.7)
flips2<-rbinom(1:100, size=1,prob=0.7)
flips2<-rbinom(100, size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(mean=100, sd=25)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t1)
class(t2)
t2
t1
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cars
head(data)
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance", main="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(mtcars$mpg)
getwd()
setwd('/Users/dongping/Code/datascience/Rprogramming/week2')
setwd('/Users/dongping/Code/datascience/Rprogramming/week2')
setwd("/Users/dongping/Code/datascience/Rprogramming/week2")
setwd('/Users/dongping/Code/datascience/Rprogramming/week2')
getwd()
setwd('/Users/dongping/Code/datascience/Rprogramming/week2')
setwd("/Users/dongping/Code/datascience/Rprogramming/week2")
getwd()
list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata")
pollutantmean("specdata")
?read.csv
?head
current_file
pollutantmean("specdata", "sulfate", 1)
current_file
file_paths
getwd
getwd()
ls()
pwd()
setwd("/Users/dongping/Code/datascience/Rprogramming/week2/specdata")
mean_vector <- c()
all_files<-as.character(list.files())
current_file<-read.csv(all_files[1], header=T, sep=",")
current_file
current_file[1:10,]
head(current_file)
pollutant
pollutant <- sulfate
pollutant <- "sulfate"
pollutant
na_removed <- current_file[!is.na(current_file[,pollutant])]
na_removed <- current_file[!is.na(current_file[,pollutant]),]
head(na_removed)
na_removed <- current_file[!is.na(current_file[,pollutant]),pollutant]
head(na_removed)
mean_vector<-c(mean_vector, na_removed)
head(mean_vector)
class(mean_vector)
class(na_removed)
mean(mean_vector)
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("/Users/dongping/Code/datascience/Rprogramming/week2/")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
source(complete.R)
getwd()
ls()
ls()
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
rm(list=ls())
source("complete.R")
source("complete.R")
rm(list=ls())
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
current_file <- read.csv("specdata/001.csv", header=T, sep=",")
head(current_file)
!is.na(current_file[,,,])
!is.na(current_file)
head(current_file)
!is.na(current_file[,"sulfate","nitrate"])
!is.na(current_file[,"sulfate"])
!is.na(current_file[,"sulfate"])&!is.na(current_file[,"nitrate"])
sum(!is.na(current_file[,"sulfate"])&!is.na(current_file[,"nitrate"]))
source("complete.R")
mean_vector
mean_vector
source("complete.R")
result
rm(list=ls())
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
rm(list=ls())
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata",1)
complete("specdata",1:10)
source("complete.R")
complete("specdata",1:10)
source("complete.R")
complete("specdata",1:10)
complete("specdata",1)
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
complete("specdata",1:10)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
6
submit()
submit()
source("corr.R")
corr("specdata",100)
corr("specdata",100)
source("corr.R")
corr("specdata",100)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 5000)
summary(cr)
submit()
submit()
submit()
rm(list=ls())
library(datasets)
data(iris)
?iris
head(iris)
tail(iris)
columnmean?
()
?columnmean
>clmean
?clmean
?cmean
iris1 <- iris["Sepal.Length","Species"]
head(iris1)
x<-list(a=iris["Sepal.Length"],b=iris["Species"])
head(x)
x<-list(c(a=iris["Sepal.Length"],b=iris["Species"])
)
head(x)
x<-iris["Sepal.Length","Species")
x<-iris["Sepal.Length","Species"]
head(x)
class(iris)
df[,c("Sepal.Length","Species")]
df[,c('Sepal.Length','Species')]
df[,c('Sepal.Length','Species')]
x<-iris[,c('Sepal.Length','Species')]
head(x)
?colSums
?colMean
?colMeans
f<-level(x$Species)
str(x)
f<-levels(x$Species)
f
split(x,f)
lapply(split(x,f),mean)
?lapply
summary(x)
lapply(split(x,f),mean, na.rm=T)
lapply(split(x,f),mean, na.rm=TRUE)
head(x)
lapply(split(x$Sepal.Length,f),mean, na.rm=TRUE)
colMeans(iris)
apply(iris,2,mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
82.63636 - 209.21429
debug(ls)
ls
ls()
